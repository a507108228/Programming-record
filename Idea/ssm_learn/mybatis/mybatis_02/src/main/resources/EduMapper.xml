<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.lzw.dao.EduMapper">
    <!-- 查询所有 返回list -->
    <select id="getEduList" resultType="com.lzw.pojo.Edu">
        select *
        from edu
    </select>

    <!--    动态sql查询之if标签 -->
    <select id="getEduByIf" resultType="com.lzw.pojo.Edu">
        select *from edu
        where 1 = 1
        <if test="id != null">
            and id=#{id}
        </if>
        <if test="name != null and name != ''">
            and name like #{name}
        </if>

        <if test="gender != null">
            and gender=#{gender}
        </if>

        <if test="school != null">
            and school like #{school}
        </if>

        <if test="grade != null">
            and grade=#{grade}
        </if>
    </select>

    <!-- 加where标签没有用 换成 Trim标签

    prefix=""::             给字符串加一个前缀
    prefixOverrides=""::    前面有什么都去掉
    suffix=""::             给字符串加一个后缀
    suffixOverrides=""::    去掉字符串后面多余的字符-->
    <select id="getEduByTrim" resultType="com.lzw.pojo.Edu">
        select *from edu
        <trim prefix="where" suffixOverrides="and">

            <if test="id != null">
                id=#{id} and
            </if>
            <if test="name != null and name != ''">
                name like #{name} and
            </if>

            <if test="gender != null">
                gender=#{gender} and
            </if>

            <if test="school != null">
                school like #{school} and
            </if>

            <if test="grade != null">
                grade=#{grade}
            </if>

        </trim>
    </select>

    <!-- choose标签 -->
    <select id="getEduByChoose" resultType="com.lzw.pojo.Edu">
        select *from edu

        <where>
            <choose>
                <when test="id!=null">id = #{id}</when>
                <when test="name!=null">name like #{name}</when>
                <when test="gender!=null">gender = #{gender}</when>
                <when test="school!=null">school = #{school}</when>
                <when test="grade!=null">grade = #{grade}</when>
                <otherwise>
                    1=1
                </otherwise>
            </choose>
        </where>

    </select>

    <!--    -->
    <update id="updateEdu1">
        update edu
        <trim prefix="set" suffixOverrides=",">

            <if test="name != null">
                name = #{name},
            </if>

            <if test="gender != null">
                gender = #{gender},
            </if>

            <if test="school!=null">
                school = #{school},
            </if>

            <if test="grade != null">
                grade = #{grade}
            </if>

        </trim>
        where id = #{id}
    </update>

<!--        void addEdu(@Param("edu")List<Edu> edu);
-->
    <insert id="addEdu">
        insert into edu(name,gender,school,grade)values
        <foreach item="item" collection="edu" separator=",">
            (#{item.name},#{item.gender},#{item.school},#{item.grade})
        </foreach>
    </insert>

</mapper>
